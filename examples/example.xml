<?xml version="1.0" ?><presentation xmlns:s="https://github.com/johndoe31415/pyradium">
	<meta>
		<title>Battle of Wolf 359</title>
		<subtitle>A Recap of Events</subtitle>
		<author>Jean-Luc Picard</author>
		<fullauthor>Jean-Luc Picard, Retired Starfleet Admiral</fullauthor>
		<affiliation>Starfleet</affiliation>
		<date>{datetm.parse(v['basedate']).add_days(7 * v['week']).strftime('%A, %Y-%m-%d')}</date>
		<presentation-time>0:30</presentation-time>
		<agenda>
			14:00
			+0:15		First part
			+0:05		Short pause
			*			Second part
			14:30
		</agenda>
		<filename-key>4864c5ba-8450-4819-9fb5-2d255aea3016</filename-key>
		<timer-preset name="Group 1 Part 1" time="14:30-0:15/2" subset="1/2" />
		<timer-preset name="Group 1 Part 2" time="14:30" subset="2/2" />
		<timer-preset name="Group 2 Part 1" time="16:30-0:30/3" subset="1/3" />
		<timer-preset name="Group 2 Part 2" time="16:30-0:15/2" subset="2/3" />
		<timer-preset name="Group 2 Part 3" time="16:30" subset="3/3" />
		<timer-preset name="Group 3" time="{v['group3_endtime']}" subset="1/1" />
		<timer-preset name="Marker before" time="100%" subset="1 - @before_intro" />
		<timer-preset name="Marker after" time="100%" subset="@before_intro -" />
	</meta>

	<variables>
		<variable src="my_vars1.json" />
		<variable src="my_vars2.json" />
		<variable>
		{
			"week":				3,
			"group3_endtime":	"17:30"
		}
		</variable>
	</variables>

	<acronyms src="acronyms.json"/>

	<slide type="title"/>

	<slide>
		<s:var name="heading" value="No section at all"/>
		<ul>
			<li>There is no section or no subsection set for this slide.</li>
			<li>In the status line, there should be nothing.</li>
		</ul>
	</slide>

	<section>Foo</section>
	<subsection>Bar</subsection>
	<slide>
		<s:var name="heading" value="Now we do have them"/>
		<ul>
			<li>Now it's section <s:enq>Foo</s:enq></li>
			<li>And subsection <s:enq>Bar</s:enq></li>
			<li>Nestable as well: <s:enq>now <b>nestable</b> as well</s:enq></li>
			<li>This should show &quot;Foo&quot; / &quot;Bar&quot; below.</li>
		</ul>
	</slide>

	<section>Moo</section>
	<slide>
		<s:var name="heading" value="Resetting subsection"/>
		<ul>
			<li>Now it's section <s:enq>Moo</s:enq></li>
			<li>But no subsection</li>
			<li>This should show <i>only</i> show <s:enq>Moo</s:enq> below.</li>
		</ul>
	</slide>

	<marker name="before_intro" />

	<section>Introduction</section>
	<subsection>Nomenclature</subsection>
	<slide type="toc"/>

	<slide>
		<s:time rel="1.5"/>
		<s:var name="heading" value="Pausing Slides"/>
		<ul>
			<li>Pausing slides is easy! Acronyms too: <s:ac>WEP</s:ac></li>
			<s:pause/>
			<li>After the first pause! Another acronym: <s:ac>DES</s:ac></li>
			<s:pause/>
			<li>This is after the second pause! Explaining <s:ac>AES</s:ac>-<s:ac>CBC</s:ac></li>
			<li><s:ac>A</s:ac> <s:ac>AB</s:ac> <s:ac>ABC</s:ac> <s:ac>ABCD</s:ac> <s:ac>ABCDE</s:ac></li>
			<li>Don't confuse <s:ac>MAC1</s:ac> and <s:ac>MAC2</s:ac></li>
		</ul>
	</slide>

	<slide>
		<s:time abs="1 min"/>
		<s:var name="heading" value="That's the second slide"/>
		<ul>
			<li>This is a test!</li>
			<s:debug>This is debugging text.</s:debug>
			<li>Should be slide number two!</li>
			<li>Next up: include!</li>
		</ul>
	</slide>

	<include src="example_sub.xml"/>

	<section>Finalization</section>
	<subsection>After Include Subsection</subsection>
	<slide type="sectiontitle"/>

	<slide>
		<s:var name="heading" value="After include"/>
		<ul>
			<li>We just included a sub-document</li>
			<li>This is the slide which directly follows an include.</li>
			<li>Fixed-width text is possible: <s:tt>001122abcdef</s:tt></li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Non-breaking space"/>
		<ul>
			<li>This is a very long sentence but it should not <s:nlb>break between</s:nlb> between &quot;break&quot; and &quot;between&quot;.</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Nested ULs"/>
		<ul>
			<li>Level 1 Moo</li>
			<li>Level 1 Koo
				<ul>
					<li>Nested 1</li>
					<li>Nested 2</li>
				</ul>
			</li>
		</ul>
	</slide>

	<slide type="quote">
		<s:time abs="15 sec"/>
		Even the best blade will rust and grow dull unless it is cared for.
		<s:var name="author" value="Klingon Proverb"/>
	</slide>

	<slide type="leftright">
		<s:var name="heading" value="Left/Right slide"/>
		<s:content name="left">
			This is on the left side. It's a long text, so it gets wrapped. You get a nice feeling as to how wide it is.
		</s:content>
		<s:content name="right">
			This is on the right side. It's a long text, so it gets wrapped. You get a nice feeling as to how wide it is.
		</s:content>
	</slide>

	<slide>
		<s:var name="heading" value="Formula in Text"/>
		<ul>
			<li>Short Weierstrass: <s:tex>y^2 = x^3 + ax + b</s:tex></li>
			<li>Some Sum: <s:tex>\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex></li>
			<!--<li>Invalid TeX: <s:tex>\foobar</s:tex></li>-->
		</ul>
		<p>
			In general, the short Weierstrass form is given as the formula <s:tex>y^2 = x^3 + ax + b</s:tex> and that's just great.
		</p>
	</slide>

	<slide>
		<s:var name="heading" value="Long Formula"/>
		<p>This is the long form:</p>
		<s:tex long="1">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
		<p>While this is the short one for comparison:</p>
		<s:tex>\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
	</slide>

	<slide>
		<s:var name="heading" value="Indented formula"/>
		<s:tex long="1" indent="0">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
		<s:tex long="1" indent="1">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
		<s:tex long="1" indent="2">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
	</slide>

	<slide>
		<s:var name="heading" value="Sized formula"/>
		<s:tex long="1" scale="0.75">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
		<s:tex long="1">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
		<s:tex long="1" scale="1.25">\sum_{i = 0}^{10} \frac{i^2}{\pi}</s:tex>
	</slide>

	<subsection>Code Highlighting</subsection>
	<slide>
		<s:var name="heading" value="Some Python Code"/>
		<s:code lang="python3"><![CDATA[
			if foo == "bar":
				print("foo was 'bar'")
				return getattr(self, "bar")
			else:
				print("foo was not 'bar'")
				return lambda x: tuple(x, "foo", 123)
		]]></s:code>
	</slide>

	<slide>
		<s:var name="heading" value="Long code in scrollbox"/>
		<s:code lang="python3" height="500px"><![CDATA[
			if foo == "bar":
				print("foo was 'bar' 1")
				print("foo was 'bar' 2")
				print("foo was 'bar' 3")
				print("foo was 'bar' 4")
				print("foo was 'bar' 5")
				return getattr(self, "bar")
			else:
				print("foo was not 'bar' 1")
				print("foo was not 'bar' 2")
				print("foo was not 'bar' 3")
				print("foo was not 'bar' 4")
				print("foo was not 'bar' 5")
				return lambda x: tuple(x, "foo", 123)
		]]></s:code>
	</slide>

	<slide>
		<s:var name="heading" value="Some C Code"/>
		<s:code lang="c"><![CDATA[
			int main(int argc, char **argv) {
				printf("Foo: %d -> %p\n", argc, argv);
				return 0;
			}
		]]></s:code>
	</slide>

	<slide>
		<s:var name="heading" value="Some Python Code from a File"/>
		<s:code lang="python3" src="my_data.py"/>
	</slide>

	<slide>
		<s:var name="heading" value="Some Terminal"/>
		<s:term prompt="^(\$|#) " height="500px"><![CDATA[
			$ ls /
			bin
			sbin
			$ cat /var/log/auth.log \
				| sed -rn 's/.*Failed password for invalid user (\w*?) from.*/\1/p' \
				| sort \
				| uniq \
				| wc -l
			3332
			$ echo $UID
			1000
			# echo $UID
			0
		]]></s:term>
	</slide>

	<slide>
		<s:var name="heading" value="Some Terminal from a File"/>
		<s:term prompt="$ " src="terminal_output.txt"/>
	</slide>

	<slide>
		<s:var name="heading" value="Quotation Marks"/>
		<ul>
			<li><s:enq>US style</s:enq></li>
			<li><s:enq type="fr">French style</s:enq></li>
			<li><s:enq type="de">German style</s:enq></li>
			<li><s:enq type="sgl">Single quotation marks</s:enq></li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Arrows"/>
		<ul>
			<li><s:ar>-)</s:ar> Right and long right <s:ar>--)</s:ar></li>
			<li><s:ar>(-</s:ar> Left and long left <s:ar>(--</s:ar></li>
			<li><s:ar>(-)</s:ar> both and <s:ar>(--)</s:ar> both long and both double <s:ar>(=)</s:ar> and both double long <s:ar>(==)</s:ar></li>
			<li><s:ar>=)</s:ar> Double Right</li>
			<li><s:ar>(=</s:ar> Double Left</li>
			<li><s:ar>enter</s:ar> Enter Key</li>
			<li><s:ar>light</s:ar> Lightning</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Dashes"/>
		<ul>
			<li>By default dashes are replaced by endash and emdash, -- and ---</li>
			<li>But they can be verbatim as well: <s:verb>-- and ---</s:verb></li>
			<li>They can be broken by any empty tag, e.g. -<s:nsc/>-</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Symbols"/>
		<ul>
			<li><s:sym>xor</s:sym> XOR and <s:sym>xmul</s:sym> XMUL</li>
			<li>Operators <s:sym>le</s:sym> <s:sym>lt</s:sym> <s:sym>eq</s:sym> <s:sym>neq</s:sym> <s:sym>gt</s:sym><s:sym>ge</s:sym></li>
			<li>Infinity <s:sym>inf</s:sym></li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Emojis"/>
		<ul>
			<li><s:emo>:)</s:emo> <s:emo>:))</s:emo> <s:emo>;)</s:emo></li>
			<li><s:emo>:(</s:emo> <s:emo>:((</s:emo> <s:emo>;(</s:emo></li>
			<li><s:emo>:|</s:emo> <s:emo>:o</s:emo> <s:emo>:O</s:emo></li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Image Rendering"/>
		<s:img src="3dbox.svg"/>
	</slide>

	<slide>
		<s:var name="heading" value="Image Rendering with substitution"/>
		<s:img src="3dbox.svg">
			<s:format name="foo" value="Works!"/>
			<s:format name="n" value="123" type="int" />
		</s:img>
	</slide>

	<slide type="animation">
		<s:var name="heading" value="Image Animation"/>
		<s:var name="filename" value="animation.svg"/>
	</slide>

	<slide>
		<s:var name="heading" value="gnuplot Rendering"/>
		<s:plot src="histogram.gnuplot"/>
	</slide>

	<slide>
		<s:var name="heading" value="graphviz Rendering"/>
		<s:graphviz src="directed_graph.dot" />
	</slide>

	<slide>
		<s:var name="heading" value="CircuitJS Circuit"/>
		<s:circuit>
			<s:param name="src">
				$ 1 0.001 0.03998496543448474 50 5 43 5e-11
				M 400 272 480 272 2 2.5
				x -3 246 18 249 4 20 x2
				x -3 214 18 217 4 20 x1
				x 498 276 508 279 4 20 y
				L 48 208 32 208 2 0 false 5 0
				L 48 240 32 240 2 0 false 5 0
				w 80 240 48 240 0
				w 48 208 96 208 0
				I 128 208 192 208 0 0.5 5
				150 192 224 288 224 0 2 0 5
				150 192 320 288 320 0 2 0 5
				I 128 336 192 336 0 0.5 5
				w 112 208 128 208 0
				w 112 240 192 240 0
				w 80 240 80 336 0
				w 80 336 128 336 0
				w 192 304 96 304 0
				w 96 304 96 208 0
				w 112 208 96 208 0
				w 80 240 112 240 0
				152 304 272 400 272 0 2 0 5
				w 288 224 304 224 0
				w 304 224 304 256 0
				w 304 288 304 320 0
				w 304 320 288 320 0
			</s:param>
			This links to a CircuitJS circuit!
		</s:circuit>
	</slide>

	<subsection>Esc&lt;&gt;ping</subsection>
	<slide>
		<s:var name="heading" value="Escaped &lt;&gt; Characters"/>
		<ul>
			<li>This is verbatim: &lt; &gt;</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Execution of scripts 1"/>
		<s:exec cmd="my_script foo"/>
	</slide>

	<slide>
		<s:var name="heading" value="Execution of scripts 2"/>
		<s:exec cmd="my_script bar"/>
	</slide>

	<slide>
		<s:var name="heading" value="Execution of scripts 3"/>
		<s:tt><s:exec cmd="my_script tt"/></s:tt>
	</slide>

	<slide>
		<s:var name="heading" value="Nested Tags"/>
		<s:tt>first <b>bold <i>bolditalics</i></b> last</s:tt>
	</slide>

	<slide>
		<s:time abs="10 min"/>
		<s:var name="heading" value="Demo Slide!"/>
		<ul>
			<li>Demo time! This will take 10 minutes!</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Nth"/>
		<ul>
			<li>This is the <s:nth>1</s:nth> line.</li>
			<li>This is the <s:nth>2</s:nth> line.</li>
			<li>This is the <s:nth>3</s:nth> line.</li>
			<li>This is the <s:nth>4</s:nth> line.</li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="Digital Timing Diagram"/>
		<s:dtg>
			C  = 00000|1111100000|1111100000|11111000
			D  = 11111 1100000000 0001010111 00000000
			Q  = 00000 1111111111 0000000000 11111111
			!Q = 11111 0000000000 1111111111 00000000
		</s:dtg>
	</slide>

	<slide>
		<s:var name="heading" value="Digital Timing Diagram"/>
		<s:dtg>
			A  = 0000ZZZZ000ZZZ111ZZZ000
			B  = 000111000:::!:::!:::ZZZ
			C  = 000:::000111:::111
			D  = 000________111
		</s:dtg>
	</slide>

	<slide>
		<s:var name="heading" value="File inclusion"/>
		<s:file src="acronyms.json">Files can be included as well!</s:file>
	</slide>

	<slide>
		<s:var name="heading" value="Variable substitution"/>
		<ul>
			<li>foo = <s:sub name="foo" /></li>
			<li>bar = <s:sub name="bar" /></li>
			<li><s:sub>v["koo"]["blah"]</s:sub></li>
			<li><s:sub>v["koo"]["blah"] * 123</s:sub></li>
		</ul>
	</slide>

	<slide>
		<s:var name="heading" value="QR code rendering"/>
		<s:qrcode>https://www.johannes-bauer.com</s:qrcode>
	</slide>

	<slide type="final">
		<s:time rel="0"/>
	</slide>
	<slide type="acronyms">
		<s:time rel="0"/>
	</slide>

	<slide type="feedback">
		<s:var name="endpoint" value="https://myserver.com/feedback-api"/>
		<s:time rel="0"/>
	</slide>
</presentation>
